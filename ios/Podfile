# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

pod 'GoogleMLKit/TextRecognition', '~> 4.0.0'
# To recognize Chinese script
pod 'GoogleMLKit/TextRecognitionChinese', '~> 4.0.0'
pod 'MLKitTextRecognitionCommon', '1.0.0'
pod 'GTMSessionFetcher/Core', '2.1.0'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  #Override Firebase SDK Version
  $FirebaseSDKVersion = '10.22.0'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

#post_install do |installer|
#  installer.pods_project.targets.each do |target|
#    flutter_additional_ios_build_settings(target)
#  end
#end

# fixing xcode 15 build error "DT_TOOLCHAIN_DIR cannot be used to evaluate LIBRARY_SEARCH_PATHS, use TOOLCHAIN_DIR instead"
post_install do |installer|

  installer.pods_project.build_configuration_list.build_configurations.each do |configuration|
    configuration.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
  end

  installer.pods_project.targets.each do |target|
     flutter_additional_ios_build_settings(target)
      # target.build_configurations.each do |config|
      #   config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      #   xcconfig_path = config.base_configuration_reference.real_path
      #   xcconfig = File.read(xcconfig_path)
      #   xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
      #   File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
      #end
  end
end
